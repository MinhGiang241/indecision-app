{"version":3,"sources":["../../src/playground/counter-example.js"],"names":[],"mappings":";;;;;;;;;;IAAM,O;;;AACJ,mBAAY,KAAZ,EAAmB;AAAA;;AAAA,kHACX,KADW;;AAEjB,UAAK,YAAL,GAAoB,MAAK,YAAL,CAAkB,IAAlB,OAApB;AACA,UAAK,cAAL,GAAsB,MAAK,cAAL,CAAoB,IAApB,OAAtB;AACA,UAAK,WAAL,GAAmB,MAAK,WAAL,CAAiB,IAAjB,OAAnB;AACA,UAAK,KAAL,GAAa;AACX,aAAO;AADI,KAAb;AALiB;AAQlB;;;;wCACmB;AAClB,UAAM,OAAO,aAAa,OAAb,CAAqB,OAArB,CAAb;AACA,UAAM,QAAQ,SAAS,IAAT,EAAe,EAAf,CAAd;AACA,UAAI,CAAC,MAAM,KAAN,CAAL,EAAmB;AACjB,aAAK,QAAL,CAAc;AAAA,iBAAO,EAAE,YAAF,EAAP;AAAA,SAAd;AACD;AACF;;;uCACkB,S,EAAW,S,EAAW;AACvC,UAAI,UAAU,KAAV,KAAoB,KAAK,KAAL,CAAW,KAAnC,EAA0C;AACxC,qBAAa,OAAb,CAAqB,OAArB,EAA8B,KAAK,KAAL,CAAW,KAAzC;AACD;AACF;;;mCAEc;AACb,WAAK,QAAL,CAAc,UAAC,SAAD,EAAe;AAC3B,eAAO;AACL,iBAAO,UAAU,KAAV,GAAkB;AADpB,SAAP;AAGD,OAJD;AAKD;;;qCACgB;AACf,WAAK,QAAL,CAAc,UAAC,SAAD,EAAe;AAC3B,eAAO;AACL,iBAAO,UAAU,KAAV,GAAkB;AADpB,SAAP;AAGD,OAJD;AAKD;;;kCACa;AACZ,WAAK,QAAL,CAAc,YAAM;AAClB,eAAO;AACL,iBAAO;AADF,SAAP;AAGD,OAJD;AAKD;;;6BACQ;AACP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAY,eAAK,KAAL,CAAW;AAAvB,SADF;AAEE;AAAA;AAAA,YAAQ,SAAS,KAAK,YAAtB;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA,YAAQ,SAAS,KAAK,cAAtB;AAAA;AAAA,SAHF;AAIE;AAAA;AAAA,YAAQ,SAAS,KAAK,WAAtB;AAAA;AAAA;AAJF,OADF;AAQD;;;;EArDmB,MAAM,S;;AAwD5B,SAAS,MAAT,CAAgB,oBAAC,OAAD,OAAhB,EAA6B,SAAS,cAAT,CAAwB,KAAxB,CAA7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA","file":"app.js","sourcesContent":["class Counter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleAddOne = this.handleAddOne.bind(this);\r\n    this.handleMinusOne = this.handleMinusOne.bind(this);\r\n    this.handleReset = this.handleReset.bind(this);\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const json = localStorage.getItem(\"count\");\r\n    const count = parseInt(json, 10);\r\n    if (!isNaN(count)) {\r\n      this.setState(() => ({ count }));\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.count !== this.state.count) {\r\n      localStorage.setItem(\"count\", this.state.count);\r\n    }\r\n  }\r\n\r\n  handleAddOne() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        count: prevState.count + 1,\r\n      };\r\n    });\r\n  }\r\n  handleMinusOne() {\r\n    this.setState((prevState) => {\r\n      return {\r\n        count: prevState.count - 1,\r\n      };\r\n    });\r\n  }\r\n  handleReset() {\r\n    this.setState(() => {\r\n      return {\r\n        count: 0,\r\n      };\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Count: {this.state.count}</h1>\r\n        <button onClick={this.handleAddOne}>+1</button>\r\n        <button onClick={this.handleMinusOne}>-1</button>\r\n        <button onClick={this.handleReset}>reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Counter />, document.getElementById(\"app\"));\r\n\r\n// const appRoot = document.getElementById(\"app\");\r\n// let count = 0;\r\n// const addOne = () => {\r\n//   count++;\r\n//   renderCountApp();\r\n// };\r\n// const minusOne = () => {\r\n//   count--;\r\n//   renderCountApp();\r\n// };\r\n// const reset = () => {\r\n//   count = 0;\r\n//   renderCountApp();\r\n// };\r\n\r\n// const renderCountApp = () => {\r\n//   const templateTwo = (\r\n//     <div>\r\n//       <h1>Count: {count}</h1>\r\n//       <button onClick={addOne}>+1</button>\r\n//       <br></br>\r\n//       <button onClick={minusOne}>-1</button>\r\n//       <br></br>\r\n//       <button onClick={reset}>reset</button>\r\n//     </div>\r\n//   );\r\n\r\n//   ReactDOM.render(templateTwo, appRoot);\r\n// };\r\n\r\n// renderCountApp();\r\n"]}